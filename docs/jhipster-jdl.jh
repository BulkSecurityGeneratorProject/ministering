entity Org {
	name String required
}
entity Family {
	name String required,
    coupleName String,
    address String
}
entity Member {
	type FamilyType required,
    firstName String,
    middleName String,
    lastName String,
    birthdate Instant
}
enum FamilyType {
    INFANT,
    PRIMARY,
    YW,
    YM,
    RELIEF_SOCIETY,
    ELDER,
    HP
}
entity Companionship {
	name String required
}
entity Phone {
	type PhoneType required,
	number String required,
    textMsgOkay Boolean
}
enum PhoneType {
	MOBILE,
    LAND_LAND,
    BUSINESS
}
entity Email {
	type EmailType required,
    address String
}
enum EmailType {
	INDIVIDUAL,
    HOUSEHOLD,
    BUSINESS
}
entity SocialMedia {
	typeype SocialMediaType required,
    url String
}
enum SocialMediaType {
	FACEBOOK,
    TWITTER,
    GOOGLE,
    WEB_SITE,
    BUSINESS
}
entity Notes {
	type NoteType required,
    note String
}

enum NoteType {
    INDIVIDUAL,
    COMPANIONSHIP,
    FAMILY
}

entity Stewardship {}
entity Companion {}
entity Assignment {}
entity Ministry {}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Member{org} to Org
    Companion{member} to Member
    Companion{companionship} to Companionship
    Assignment{stewardship} to Stewardship
    Assignment{family} to Family
    Stewardship{companionship} to Companionship
    Ministry{member} to Member
    Ministry{companionship} to Companionship
    Ministry{stewardship} to Stewardship
    Phone{member} to Member
    Email{member} to Member
    SocialMedia{member} to Member
    Notes{member} to Member
    Notes{companionship} to Companionship
    Notes{family} to Family
}
relationship ManyToOne {
	Member{family} to Family
}
relationship OneToOne {
	Companionship{companionship} to Stewardship
}

// Set pagination options
paginate Family, Member with infinite-scroll
paginate Companionship with pagination

// dto Org, Family, Member, Companionship, Phone, Email, SocialMedia, Notes with mapstruct

// Set service options to all except few
// service all with serviceImpl

// Set an angular suffix
angularSuffix * with mi

